var searchIndex = {};
searchIndex["cdrs"] = {"doc":"**cdrs** is a native Cassandra DB client written in Rust. It&#39;s under a hard development as of now.","items":[[0,"client","cdrs","",null,null],[3,"CDRS","cdrs::client","",null,null],[11,"new","","",0,{"inputs":[{"name":"string"}],"output":{"name":"result"}}],[11,"start","","",0,null],[11,"query","","",0,null],[0,"consistency","cdrs","The module contains Rust representation of Cassandra consistency levels.",null,null],[4,"Consistency","cdrs::consistency","`Consistency` is an enum which represents Cassandra&#39;s consistency levels.\nTo find more details about each consistency level please refer to Cassandra official docs.",null,null],[13,"Any","","",1,null],[13,"One","","",1,null],[13,"Two","","",1,null],[13,"Three","","",1,null],[13,"Quorum","","",1,null],[13,"All","","",1,null],[13,"LocalQuorum","","",1,null],[13,"EachQuorum","","",1,null],[13,"Serial","","",1,null],[13,"LocalSerial","","",1,null],[13,"LocalOne","","",1,null],[11,"fmt","","",1,null],[11,"into_cbytes","","",1,null],[11,"from","","",1,{"inputs":[{"name":"i32"}],"output":{"name":"consistency"}}],[11,"from_bytes","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"consistency"}}],[11,"from_cursor","","",1,{"inputs":[{"name":"cursor"}],"output":{"name":"consistency"}}],[0,"error","cdrs","This modules contains [Cassandra&#39;s errors](https://github.com/apache/cassandra/blob/trunk/doc/native_protocol_v4.spec#L1011)\nwhich server could respond to client.",null,null],[3,"CDRSError","cdrs::error","CDRS error which could be returned by Cassandra server as a response. As it goes\nfrom the specification it contains an error code and an error message. Apart of those\ndepending of type of error it could contain an additional information about an error.\nThis additional information is represented by `additional_info` property which is `ErrorKind`.",null,null],[12,"error_code","","`i32` that points to a type of error.",2,null],[12,"message","","Error message string.",2,null],[12,"additional_info","","Additional information.",2,null],[3,"SimpleError","","Is used if error does not contain any additional info.",null,null],[3,"UnavailableError","","Additional info about [unavailable exception](https://github.com/apache/cassandra/blob/trunk/doc/native_protocol_v4.spec#L1025)",null,null],[12,"cl","","Consistency level of query.",3,null],[12,"required","","Number of nodes that should be available to respect `cl`.",3,null],[12,"alive","","Number of replicas that we were know to be alive.",3,null],[3,"WriteTimeoutError","","Timeout exception during a write request.",null,null],[12,"cl","","Consistency level of query.",4,null],[12,"received","","`i32` representing the number of nodes having acknowledged the request.",4,null],[12,"blockfor","","`i32` representing the number of replicas whose acknowledgement is required to achieve `cl`.",4,null],[12,"write_type","","Describes the type of the write that timed out",4,null],[3,"ReadTimeoutError","","Timeout exception during a read request.",null,null],[12,"cl","","Consistency level of query.",5,null],[12,"received","","`i32` representing the number of nodes having acknowledged the request.",5,null],[12,"blockfor","","`i32` representing the number of replicas whose acknowledgement is required to achieve `cl`.",5,null],[3,"ReadFailureError","","A non-timeout exception during a read request.",null,null],[12,"cl","","Consistency level of query.",6,null],[12,"received","","`i32` representing the number of nodes having acknowledged the request.",6,null],[12,"blockfor","","`i32` representing the number of replicas whose acknowledgement is required to achieve `cl`.",6,null],[12,"num_failures","","Represents the number of nodes that experience a failure while executing the request.",6,null],[3,"FunctionFailureError","","A (user defined) function failed during execution.",null,null],[12,"keyspace","","The keyspace of the failed function.",7,null],[12,"function","","The name of the failed function",7,null],[12,"arg_types","","`Vec&lt;CString&gt;` one string for each argument type (as CQL type) of the failed function.",7,null],[3,"WriteFailureError","","A non-timeout exception during a write request. [Read more...](https://github.com/apache/cassandra/blob/trunk/doc/native_protocol_v4.spec#L1106)",null,null],[12,"cl","","Consistency of the query having triggered the exception.",8,null],[12,"received","","Represents the number of nodes having answered the request.",8,null],[12,"blockfor","","Represents the number of replicas whose acknowledgement is required to achieve `cl`.",8,null],[12,"num_failures","","Represents the number of nodes that experience a failure while executing the request.",8,null],[12,"write_type","","describes the type of the write that failed.",8,null],[3,"AlreadyExistsError","","The query attempted to create a keyspace or a table that was already existing.\n[Read more...](https://github.com/apache/cassandra/blob/trunk/doc/native_protocol_v4.spec#L1140)",null,null],[12,"ks","","Represents either the keyspace that already exists,\nor the keyspace in which the table that already exists is.",9,null],[12,"table","","Represents the name of the table that already exists.",9,null],[3,"UnpreparedError","","Can be thrown while a prepared statement tries to be\nexecuted if the provided prepared statement ID is not known by\nthis host. [Read more...](https://github.com/apache/cassandra/blob/trunk/doc/native_protocol_v4.spec#L1150)",null,null],[12,"id","","Unknown ID.",10,null],[4,"AdditionalErrorInfo","","Additional error info in accordance to [Cassandra protocol v4](https://github.com/apache/cassandra/blob/trunk/doc/native_protocol_v4.spec#L1011).",null,null],[13,"Server","","",11,null],[13,"Protocol","","",11,null],[13,"Authentication","","",11,null],[13,"Unavailable","","",11,null],[13,"Overloaded","","",11,null],[13,"IsBootstrapping","","",11,null],[13,"Truncate","","",11,null],[13,"WriteTimeout","","",11,null],[13,"ReadTimeout","","",11,null],[13,"ReadFailure","","",11,null],[13,"FunctionFailure","","",11,null],[13,"WriteFailure","","",11,null],[13,"Syntax","","",11,null],[13,"Unauthorized","","",11,null],[13,"Invalid","","",11,null],[13,"Config","","",11,null],[13,"AlreadyExists","","",11,null],[13,"Unprepared","","",11,null],[4,"WriteType","","Describes the type of the write that failed. [Read more...](https://github.com/apache/cassandra/blob/trunk/doc/native_protocol_v4.spec#L1118)",null,null],[13,"Simple","","The write was a non-batched non-counter write",12,null],[13,"Batch","","The write was a (logged) batch write.\nIf this type is received, it means the batch log\nhas been successfully written",12,null],[13,"UnloggedBatch","","The write was an unlogged batch. No batch log write has been attempted.",12,null],[13,"Counter","","The write was a counter write (batched or not)",12,null],[13,"BatchLog","","The failure occured during the write to the batch log when a (logged) batch\nwrite was requested.",12,null],[6,"Result","","CDRS specific `Result` which contains a [`Frame`] in case of `Ok` and `CDRSError` if `Err`.",null,null],[11,"fmt","","",2,null],[11,"from_cursor","","",2,{"inputs":[{"name":"cursor"}],"output":{"name":"cdrserror"}}],[11,"fmt","","",11,null],[11,"from_cursor_with_code","","",11,{"inputs":[{"name":"cursor"},{"name":"cint"}],"output":{"name":"additionalerrorinfo"}}],[11,"fmt","","",13,null],[11,"from_cursor","","",13,{"inputs":[{"name":"cursor"}],"output":{"name":"simpleerror"}}],[11,"fmt","","",3,null],[11,"from_cursor","","",3,{"inputs":[{"name":"cursor"}],"output":{"name":"unavailableerror"}}],[11,"fmt","","",4,null],[11,"from_cursor","","",4,{"inputs":[{"name":"cursor"}],"output":{"name":"writetimeouterror"}}],[11,"fmt","","",5,null],[11,"replica_has_responded","","Shows if replica has resonded to a query.",5,null],[11,"from_cursor","","",5,{"inputs":[{"name":"cursor"}],"output":{"name":"readtimeouterror"}}],[11,"fmt","","",6,null],[11,"replica_has_responded","","Shows if replica has resonded to a query.",6,null],[11,"from_cursor","","",6,{"inputs":[{"name":"cursor"}],"output":{"name":"readfailureerror"}}],[11,"fmt","","",7,null],[11,"from_cursor","","",7,{"inputs":[{"name":"cursor"}],"output":{"name":"functionfailureerror"}}],[11,"fmt","","",8,null],[11,"from_cursor","","",8,{"inputs":[{"name":"cursor"}],"output":{"name":"writefailureerror"}}],[11,"fmt","","",12,null],[11,"from_cursor","","",12,{"inputs":[{"name":"cursor"}],"output":{"name":"writetype"}}],[11,"fmt","","",9,null],[11,"from_cursor","","",9,{"inputs":[{"name":"cursor"}],"output":{"name":"alreadyexistserror"}}],[11,"fmt","","",10,null],[11,"from_cursor","","",10,{"inputs":[{"name":"cursor"}],"output":{"name":"unpreparederror"}}],[0,"frame","cdrs","`frame` module contains general Frame functionality.",null,null],[3,"Frame","cdrs::frame","",null,null],[12,"version","","",14,null],[12,"flag","","",14,null],[12,"opcode","","",14,null],[12,"stream","","",14,null],[12,"body","","",14,null],[4,"Version","","Frame&#39;s version",null,null],[13,"Request","","",15,null],[13,"Response","","",15,null],[4,"Flag","","Frame&#39;s flag",null,null],[13,"Compression","","",16,null],[13,"Tracing","","",16,null],[13,"CustomPayload","","",16,null],[13,"Warning","","",16,null],[13,"Ignore","","",16,null],[4,"Opcode","","",null,null],[13,"Error","","",17,null],[13,"Startup","","",17,null],[13,"Ready","","",17,null],[13,"Authenticate","","",17,null],[13,"Options","","",17,null],[13,"Supported","","",17,null],[13,"Query","","",17,null],[13,"Result","","",17,null],[13,"Prepare","","",17,null],[13,"Execute","","",17,null],[13,"Register","","",17,null],[13,"Event","","",17,null],[13,"Batch","","",17,null],[13,"AuthChallenge","","",17,null],[13,"AuthResponse","","",17,null],[13,"AuthSuccess","","",17,null],[17,"VERSION_LEN","","Number of version bytes in accordance to protocol.",null,null],[17,"FLAG_LEN","","Number of flag bytes in accordance to protocol.",null,null],[17,"OPCODE_LEN","","Number of opcode bytes in accordance to protocol.",null,null],[17,"STREAM_LEN","","Number of stream bytes in accordance to protocol.",null,null],[17,"LENGTH_LEN","","Number of body length bytes in accordance to protocol.",null,null],[11,"fmt","","",14,null],[11,"get_body","","",14,null],[11,"into_cbytes","","",14,null],[11,"fmt","","",15,null],[11,"as_byte","","",15,null],[11,"from","","",15,{"inputs":[{"name":"vec"}],"output":{"name":"version"}}],[11,"fmt","","",16,null],[11,"as_byte","","",16,null],[11,"from","","",16,{"inputs":[{"name":"vec"}],"output":{"name":"flag"}}],[11,"fmt","","",17,null],[11,"as_byte","","",17,null],[11,"from","","",17,{"inputs":[{"name":"vec"}],"output":{"name":"opcode"}}],[0,"frame_query","cdrs","Contains Query Frame related functionality.",null,null],[3,"BodyReqQuery","cdrs::frame_query","Structure which represents body of Query request",null,null],[12,"query","","Query string.",18,null],[12,"query_params","","Query parameters.",18,null],[3,"ParamsReqQuery","","Parameters of Query request.",null,null],[12,"consistency","","Cassandra consistency level.",19,null],[12,"flags","","Array of query flags.",19,null],[12,"values","","Array of values.",19,null],[12,"page_size","","Page size.",19,null],[12,"paging_state","","Array of bytes which represents paging state.",19,null],[12,"serial_consistency","","Serial `Consistency`.",19,null],[12,"timestamp","","Timestamp.",19,null],[4,"QueryFlags","","Cassandra Query Flags.",null,null],[13,"Value","","If set indicates that Query Params contains value.",20,null],[13,"SkipMetadata","","If set indicates that Query Params does not contain metadata.",20,null],[13,"PageSize","","If set indicates that Query Params contains page size.",20,null],[13,"WithPagingState","","If set indicates that Query Params contains paging state.",20,null],[13,"WithSerialConsistency","","If set indicates that Query Params contains serial consistency.",20,null],[13,"WithDefaultTimestamp","","If set indicates that Query Params contains default timestamp.",20,null],[13,"WithNamesForValues","","If set indicates that Query Params values are named ones.",20,null],[11,"new","","**Note:** shold be used by internal stuff only. Fabric function that produces Query request body.",18,{"inputs":[{"name":"string"},{"name":"consistency"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"bodyreqquery"}}],[11,"into_cbytes","","",18,null],[11,"set_values","","Sets values of Query request params.",19,null],[11,"into_cbytes","","",19,null],[11,"as_byte","","",20,null],[11,"new_req_query","cdrs::frame","**Note:** This function should be used internally for building query request frames.",14,{"inputs":[{"name":"string"},{"name":"consistency"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"frame"}}],[0,"frame_ready","cdrs","",null,null],[3,"BodyResReady","cdrs::frame_ready","",null,null],[11,"new","","",21,{"inputs":[],"output":{"name":"bodyresready"}}],[11,"from","","",21,{"inputs":[{"name":"vec"}],"output":{"name":"bodyresready"}}],[11,"into_cbytes","","",21,null],[0,"frame_response","cdrs","",null,null],[4,"ResponseBody","cdrs::frame_response","",null,null],[13,"Error","","",22,null],[13,"Startup","","",22,null],[13,"Ready","","",22,null],[13,"Authenticate","","",22,null],[13,"Options","","",22,null],[13,"Supported","","",22,null],[13,"Query","","",22,null],[13,"Result","","",22,null],[13,"Prepare","","",22,null],[13,"Execute","","",22,null],[13,"Register","","",22,null],[13,"Event","","",22,null],[13,"Batch","","",22,null],[13,"AuthChallenge","","",22,null],[13,"AuthResponse","","",22,null],[13,"AuthSuccess","","",22,null],[11,"fmt","","",22,null],[11,"from","","",22,{"inputs":[{"name":"vec"},{"name":"opcode"}],"output":{"name":"responsebody"}}],[0,"frame_result","cdrs","",null,null],[3,"BodyResResultVoid","cdrs::frame_result","Body of a response of type Void",null,null],[3,"BodyResResultSetKeyspace","","It represents set keyspace result body. Body contains keyspace name.",null,null],[12,"body","","It contains name of keyspace that was set.",23,null],[3,"BodyResResultRows","","Structure that represents result of type [rows](https://github.com/apache/cassandra/blob/trunk/doc/native_protocol_v4.spec#L533).",null,null],[12,"metadata","","Rows metadata",24,null],[12,"rows_count","","Number of rows.",24,null],[12,"rows_content","","From spec: it is composed of `rows_count` of rows.",24,null],[3,"RowsMetadata","","Rows metadata.",null,null],[12,"flags","","Flags. [Read more...](https://github.com/apache/cassandra/blob/trunk/doc/native_protocol_v4.spec#L541)",25,null],[12,"columns_count","","Number of columns.",25,null],[12,"paging_state","","Paging state.",25,null],[12,"global_table_space","","`Option` that may contain global table space.",25,null],[12,"col_specs","","List of column specifications.",25,null],[3,"ColSpec","","Single column specification.",null,null],[12,"ksname","","The initial &lt;ksname&gt; is a [string] and is only present\nif the Global_tables_spec flag is NOT set",26,null],[12,"tablename","","The initial &lt;tablename&gt; is a [string] and is present\nif the Global_tables_spec flag is NOT set",26,null],[12,"name","","Column name",26,null],[12,"col_type","","Column type defined in spec in 4.2.5.2",26,null],[3,"ColTypeOption","","Cassandra option that represent column type.",null,null],[3,"CUdt","","User defined type. [Read more...](https://github.com/apache/cassandra/blob/trunk/doc/native_protocol_v4.spec#L608)",null,null],[12,"ks","","Keyspace name.",27,null],[12,"udt_name","","UDT name",27,null],[12,"descriptions","","List of pairs `(name, type)` where name is field name and type is type of field.",27,null],[4,"ResultKind","","`ResultKind` is enum which represents types of result.",null,null],[13,"Void","","Void result.",28,null],[13,"Rows","","Rows result.",28,null],[13,"SetKeyspace","","Set keyspace result.",28,null],[13,"Prepared","","Prepeared result.",28,null],[13,"SchemaChange","","Schema change result.",28,null],[4,"ResResultBody","","ResponseBody is a generalized enum that represents all types of responses. Each of enum\noption wraps related body type.",null,null],[13,"Void","","Void response body. It&#39;s an empty stuct.",29,null],[13,"Rows","","Rows response body. It represents a body of response which contains rows.",29,null],[13,"SetKeyspace","","Set keyspace body. It represents a body of set_keyspace query and usually contains\na name of just set namespace.",29,null],[4,"RowsMetadataFlag","","Enum that represent a set of possible row metadata flags that could be set.",null,null],[13,"GlobalTableSpace","","",30,null],[13,"HasMorePages","","",30,null],[13,"NoMetadata","","",30,null],[4,"ColType","","Cassandra data types which clould be returned by a server.",null,null],[13,"Custom","","",31,null],[13,"Ascii","","",31,null],[13,"Bigint","","",31,null],[13,"Blob","","",31,null],[13,"Boolean","","",31,null],[13,"Cunter","","",31,null],[13,"Decimal","","",31,null],[13,"Double","","",31,null],[13,"Float","","",31,null],[13,"Int","","",31,null],[13,"Timestamp","","",31,null],[13,"Uuid","","",31,null],[13,"Varchar","","",31,null],[13,"Varint","","",31,null],[13,"Timeuuid","","",31,null],[13,"Inet","","",31,null],[13,"Date","","",31,null],[13,"Time","","",31,null],[13,"Smallint","","",31,null],[13,"Tinyint","","",31,null],[13,"List","","",31,null],[13,"Map","","",31,null],[13,"Set","","",31,null],[13,"Udt","","",31,null],[13,"Tuple","","",31,null],[13,"Null","","",31,null],[4,"ColTypeOptionValue","","Enum that represents all possible types of `value` of `ColTypeOption`.",null,null],[13,"CString","","",32,null],[13,"ColType","","",32,null],[13,"CSet","","",32,null],[13,"UdtType","","",32,null],[13,"CMap","","",32,null],[11,"into_cbytes","","",28,null],[11,"from_bytes","","",28,{"inputs":[{"name":"vec"}],"output":{"name":"resultkind"}}],[11,"from_cursor","","",28,{"inputs":[{"name":"cursor"}],"output":{"name":"resultkind"}}],[11,"fmt","","",29,null],[11,"parse_body","","",29,{"inputs":[{"name":"cursor"},{"name":"resultkind"}],"output":{"name":"resresultbody"}}],[11,"parse_body_from_cursor","","It retrieves `ResResultBody` from `io::Cursor` having knowledge about expected kind of result.",29,{"inputs":[{"name":"cursor"},{"name":"resultkind"}],"output":{"name":"resresultbody"}}],[11,"from_cursor","","",29,{"inputs":[{"name":"cursor"}],"output":{"name":"resresultbody"}}],[11,"fmt","","",33,null],[11,"new","","",33,{"inputs":[],"output":{"name":"bodyresresultvoid"}}],[11,"from_bytes","","",33,{"inputs":[{"name":"vec"}],"output":{"name":"bodyresresultvoid"}}],[11,"from_cursor","","",33,{"inputs":[{"name":"cursor"}],"output":{"name":"bodyresresultvoid"}}],[11,"fmt","","",23,null],[11,"new","","Factory function that takes body value and returns new instance of `BodyResResultSetKeyspace`.",23,{"inputs":[{"name":"cstring"}],"output":{"name":"bodyresresultsetkeyspace"}}],[11,"from_cursor","","",23,{"inputs":[{"name":"cursor"}],"output":{"name":"bodyresresultsetkeyspace"}}],[11,"fmt","","",24,null],[11,"from_cursor","","",24,{"inputs":[{"name":"cursor"}],"output":{"name":"bodyresresultrows"}}],[11,"fmt","","",25,null],[11,"from_cursor","","",25,{"inputs":[{"name":"cursor"}],"output":{"name":"rowsmetadata"}}],[11,"has_global_table_space","","Shows if provided flag contains GlobalTableSpace rows metadata flag",30,{"inputs":[{"name":"i32"}],"output":{"name":"bool"}}],[11,"set_global_table_space","","Sets GlobalTableSpace rows metadata flag",30,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[11,"has_has_more_pages","","Shows if provided flag contains HasMorePages rows metadata flag",30,{"inputs":[{"name":"i32"}],"output":{"name":"bool"}}],[11,"set_has_more_pages","","Sets HasMorePages rows metadata flag",30,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[11,"has_no_metadata","","Shows if provided flag contains NoMetadata rows metadata flag",30,{"inputs":[{"name":"i32"}],"output":{"name":"bool"}}],[11,"set_no_metadata","","Sets NoMetadata rows metadata flag",30,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[11,"into_cbytes","","",30,null],[11,"from_bytes","","",30,{"inputs":[{"name":"vec"}],"output":{"name":"rowsmetadataflag"}}],[11,"fmt","","",26,null],[11,"parse_colspecs","","parse_colspecs tables mutable cursor, number of columns (column_count) and flags that indicates\nif Global_tables_spec is specified. It returns column_count of ColSpecs.",26,{"inputs":[{"name":"cursor"},{"name":"i32"},{"name":"bool"}],"output":{"name":"vec"}}],[11,"fmt","","",31,null],[11,"from_bytes","","",31,{"inputs":[{"name":"vec"}],"output":{"name":"coltype"}}],[11,"from_cursor","","",31,{"inputs":[{"name":"cursor"}],"output":{"name":"coltype"}}],[11,"fmt","","",34,null],[11,"from_cursor","","",34,{"inputs":[{"name":"cursor"}],"output":{"name":"coltypeoption"}}],[11,"fmt","","",32,null],[11,"fmt","","",27,null],[11,"from_cursor","","",27,{"inputs":[{"name":"cursor"}],"output":{"name":"cudt"}}],[0,"frame_startup","cdrs","",null,null],[3,"BodyReqStartup","cdrs::frame_startup","",null,null],[12,"map","","",35,null],[11,"new","","",35,{"inputs":[{"name":"option"}],"output":{"name":"bodyreqstartup"}}],[11,"map_len","","",35,null],[11,"num","","Number of key-value pairs",35,null],[11,"into_cbytes","","",35,null],[11,"new_req_startup","cdrs::frame","",14,{"inputs":[{"name":"option"}],"output":{"name":"frame"}}],[0,"types","cdrs","",null,null],[5,"to_n_bytes","cdrs::types","Converts u64 numerical value into array of n bytes",null,{"inputs":[{"name":"u64"},{"name":"usize"}],"output":{"name":"vec"}}],[5,"i_to_n_bytes","","",null,{"inputs":[{"name":"i64"},{"name":"usize"}],"output":{"name":"vec"}}],[5,"from_bytes","","Converts byte-array into u64",null,{"inputs":[{"name":"vec"}],"output":{"name":"u64"}}],[5,"to_short","","Converts number u64 into Cassandra&#39;s [short].",null,{"inputs":[{"name":"u64"}],"output":{"name":"vec"}}],[5,"to_int","","Convers integer into Cassandra&#39;s [int]",null,{"inputs":[{"name":"i64"}],"output":{"name":"vec"}}],[5,"cursor_next_value","","",null,{"inputs":[{"name":"cursor"},{"name":"u64"}],"output":{"name":"vec"}}],[6,"CString","","",null,null],[6,"CStringList","","",null,null],[6,"CBytes","","",null,null],[6,"CInt","","Cassandra int type.",null,null],[17,"LONG_STR_LEN","","Cassandra types",null,null],[17,"SHORT_LEN","","",null,null],[17,"INT_LEN","","",null,null],[11,"into_cbytes","","Converts into Cassandra byte representation of [string]",36,null],[11,"from_cursor","","from_cursor gets Cursor who&#39;s position is set such that it should be a start of a [string].\nIt reads required number of bytes and returns a String",36,{"inputs":[{"name":"cursor"}],"output":{"name":"cstring"}}],[11,"from_cursor","","",37,{"inputs":[{"name":"cursor"}],"output":{"name":"cstringlist"}}],[11,"from_cursor","","from_cursor gets Cursor who&#39;s position is set such that it should be a start of a [bytes].\nIt reads required number of bytes and returns a CBytes",38,{"inputs":[{"name":"cursor"}],"output":{"name":"cbytes"}}],[11,"into_cbytes","","",38,null],[11,"from_cursor","","",39,{"inputs":[{"name":"cursor"}],"output":{"name":"cint"}}],[0,"value","cdrs","",null,null],[3,"Value","cdrs::value","",null,null],[12,"body","","",40,null],[12,"value_type","","",40,null],[4,"ValueType","","",null,null],[13,"Normal","","",41,null],[13,"Null","","",41,null],[13,"NotSet","","",41,null],[11,"into_cbytes","","",41,null],[11,"new_normal","","",40,{"inputs":[{"name":"vec"}],"output":{"name":"value"}}],[11,"new_null","","",40,{"inputs":[],"output":{"name":"value"}}],[11,"new_not_set","","",40,{"inputs":[],"output":{"name":"value"}}],[11,"into_cbytes","","",40,null],[8,"IntoBytes","cdrs","`IntoBytes` should be used to convert a structure into array of bytes.",null,null],[10,"into_cbytes","","It should convert a struct into an array of bytes.",42,null],[8,"FromBytes","","`FromBytes` should be used to parse an array of bytes into a structure.",null,null],[10,"from_bytes","","It gets and array of bytes and should return an implementor struct.",43,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[8,"AsByte","","`AsBytes` should be used to convert a value into a single byte.",null,null],[10,"as_byte","","It should represent a struct as a single byte.",44,null],[8,"FromSingleByte","","`FromSingleByte` should be used to convert a single byte into a value.\nIt is opposite to `AsByte`.",null,null],[10,"from_byte","","It should convert a single byte into an implementor struct.",45,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[8,"FromCursor","","`FromCursor` should be used to get parsed structure from an `io:Cursor`\nwich bound to an array of bytes.",null,null],[10,"from_cursor","","It should return an implementor from an `io::Cursor` over an array of bytes.",46,{"inputs":[{"name":"cursor"}],"output":{"name":"self"}}]],"paths":[[3,"CDRS"],[4,"Consistency"],[3,"CDRSError"],[3,"UnavailableError"],[3,"WriteTimeoutError"],[3,"ReadTimeoutError"],[3,"ReadFailureError"],[3,"FunctionFailureError"],[3,"WriteFailureError"],[3,"AlreadyExistsError"],[3,"UnpreparedError"],[4,"AdditionalErrorInfo"],[4,"WriteType"],[3,"SimpleError"],[3,"Frame"],[4,"Version"],[4,"Flag"],[4,"Opcode"],[3,"BodyReqQuery"],[3,"ParamsReqQuery"],[4,"QueryFlags"],[3,"BodyResReady"],[4,"ResponseBody"],[3,"BodyResResultSetKeyspace"],[3,"BodyResResultRows"],[3,"RowsMetadata"],[3,"ColSpec"],[3,"CUdt"],[4,"ResultKind"],[4,"ResResultBody"],[4,"RowsMetadataFlag"],[4,"ColType"],[4,"ColTypeOptionValue"],[3,"BodyResResultVoid"],[3,"ColTypeOption"],[3,"BodyReqStartup"],[6,"CString"],[6,"CStringList"],[6,"CBytes"],[6,"CInt"],[3,"Value"],[4,"ValueType"],[8,"IntoBytes"],[8,"FromBytes"],[8,"AsByte"],[8,"FromSingleByte"],[8,"FromCursor"]]};
initSearch(searchIndex);
